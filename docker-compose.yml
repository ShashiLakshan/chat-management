version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: chat_management
    ports: ["5432:5432"]
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d chat_management"]
      interval: 5s
      timeout: 3s
      retries: 20

  db-init:
    image: postgres:16-alpine
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGPASSWORD: root
    entrypoint: >
      sh -c '
        echo "Ensuring schema & extension...";
        psql -h postgres -U root -d chat_management -v ON_ERROR_STOP=1 \
          -c "CREATE SCHEMA IF NOT EXISTS chat_app AUTHORIZATION root;" \
          -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\" WITH SCHEMA chat_app;";
        echo "Done.";
      '
    restart: "no"

  pgadmin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  app:
    build: .
    image: mychat:latest
    env_file: .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:postgresql://postgres:5432/chat_management?currentSchema=${DB_SCHEMA:-chat_app}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports: [ "8080:8080" ]
    depends_on: [ postgres, redis ]

volumes:
  pg_data:
  pgadmin_data:
